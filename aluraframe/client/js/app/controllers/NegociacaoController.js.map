{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","Bind","ListaNegociacoes","NegociacoesView","_mensagem","Mensagem","MensagemView","_ordemAtual","_service","NegociacaoService","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","texto","erro","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","importa","apaga","esvazia","Negociacao","DateHelper","textoParaData","value","parseInt","parseFloat","focus","coluna","inverteOrdem","ordena","p","s"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["class NegociacaoController {\r\n    \r\n    constructor() {\r\n        \r\n        let $ = document.querySelector.bind(document);\r\n        \r\n        this._inputData = $('#data');\r\n        this._inputQuantidade = $('#quantidade');\r\n        this._inputValor = $('#valor');\r\n         \r\n        this._listaNegociacoes = new Bind(\r\n            new ListaNegociacoes(), \r\n            new NegociacoesView($('#negociacoesView')), \r\n            'adiciona', 'esvazia' , 'ordena', 'inverteOrdem');\r\n       \r\n        this._mensagem = new Bind(\r\n            new Mensagem(), new MensagemView($('#mensagemView')),\r\n            'texto');    \r\n            \r\n        this._ordemAtual = '';\r\n\r\n        this._service = new NegociacaoService();\r\n\r\n        this._init();\r\n\r\n    }\r\n    \r\n    _init() {\r\n        \r\n        this._service\r\n            .lista()\r\n            .then(negociacoes => \r\n                negociacoes.forEach(negociacao => \r\n                    this._listaNegociacoes.adiciona(negociacao)))\r\n            .catch(erro => this._mensagem.texto = erro);\r\n            \r\n        setInterval(() => {\r\n            this.importaNegociacoes();\r\n        }, 3000);                \r\n        \r\n    }\r\n\r\n    adiciona(event) {\r\n        \r\n        event.preventDefault();\r\n        \r\n        let negociacao = this._criaNegociacao();\r\n\r\n        this._service\r\n            .cadastra(negociacao)\r\n            .then(mensagem => {\r\n                this._listaNegociacoes.adiciona(negociacao);\r\n                this._mensagem.texto = mensagem;\r\n                this._limpaFormulario();\r\n            })\r\n            .catch(erro => this._mensagem.texto = erro);\r\n    }\r\n    \r\n    importaNegociacoes() {\r\n\r\n        this._service\r\n            .importa(this._listaNegociacoes.negociacoes)\r\n            .then(negociacoes => negociacoes.forEach(negociacao => {\r\n                this._listaNegociacoes.adiciona(negociacao);\r\n                this._mensagem.texto = 'Negociações do período importadas'   \r\n            }))\r\n            .catch(erro => this._mensagem.texto = erro);                              \r\n    }\r\n    \r\n    apaga() {\r\n        \r\n        this._service\r\n            .apaga()\r\n            .then(mensagem => {\r\n                this._mensagem.texto = mensagem;\r\n                this._listaNegociacoes.esvazia();                \r\n            })\r\n            .catch(erro => this._mensagem.texto = erro);\r\n    }\r\n    \r\n    _criaNegociacao() {\r\n        \r\n        return new Negociacao(\r\n            DateHelper.textoParaData(this._inputData.value),\r\n            parseInt(this._inputQuantidade.value),\r\n            parseFloat(this._inputValor.value));    \r\n    }\r\n    \r\n    _limpaFormulario() {\r\n     \r\n        this._inputData.value = '';\r\n        this._inputQuantidade.value = 1;\r\n        this._inputValor.value = 0.0;\r\n        this._inputData.focus();   \r\n    }\r\n    \r\n    ordena(coluna) {\r\n        \r\n        if(this._ordemAtual == coluna) {\r\n            this._listaNegociacoes.inverteOrdem(); \r\n        } else {\r\n            this._listaNegociacoes.ordena((p, s) => p[coluna] - s[coluna]);    \r\n        }\r\n        this._ordemAtual = coluna;    \r\n    }\r\n}"]}